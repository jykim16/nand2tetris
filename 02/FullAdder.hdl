// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // Put you code here:
    HalfAdder(a=a,b=b,sum=bases,carry=carryForward0);
    HalfAdder(a=bases,b=c,sum=sum,carry=carryForward1);
    Or(a=carryForward0, b=carryForward1, out=carry);
}

//// Not optimized
//  HalfAdder(a=b,b=c,sum=sum0,carry=carry0);
//  Xor(a=b, b=c, out=notsum1);
//  Not(in=notsum1, out=sum1);
//  Or(a=b, b=c, out=carry1);
//  Mux(a=sum0, b=sum1, sel=a, out=sum);
//  Mux(a=carry0, b=carry1, sel=a, out=carry);
//// This should be refactored to XNor
// Xor(a=b, b=c, out=notsum1);
//  Not(in=notsum1, out=sum1);
